Привет! Пока!

1) S->E   
2) S-> S = E
//3) S->S is E
4) S->S > E
5) S->S < E
6) E->T                 R = ), +, -, #
7) E->E+T               R = ), +, -, #
8) E->E-T               R = ), +, -, #
9) T->F                 
10) T->T*F              R = +, -, *, /, ), #
11) T->T/F              R = +, -, *, /, ), #
//12) F->DIGIT, VAR
//13) F->a(ARG)
14) F->(E)
16) ARG->ARG,a
15) ARG->a              R = ")" ","




-------------------------------
РАБОТАЕМ С ЭТИМ!


16) ARG->ARG,a
15) ARG->a  
//22) B->B,S
23) B->B,a(ARG)
//24) B->S            
//25) B->a(ARG)       R= "." "," и -5 символ if + (flag_:-=1)
26) H->a(ARG)       R= ":" "." 
    В -> :-a(arg)          

Внутренняя структура: 
H:-B.
H.

B->a(ARG) 
H->B      R = ".", ":"

H:-H.

a(ARG),a(ARG) ,a(ARG).



15) ARG->ARG,a
16) ARG->a  
17) Q->a(ARG):-a(ARG)
18) Q->Q,a(ARG)
19) P->Q.
20) P->a(ARG).


21) PROGR->MOP              R = '\0'
22) MOP->MOP. P    


---------------------------------






























































реализация:
15.1) a->word
15.2) a->"word"

n[100][21]
massiv
word->a
a->arg
(E)->F



на будущее:
Name -> Aabcd
Str -> "word"


WORD(WORD) :- WORD(WORD, WORD, WORD, WORD, WORD, WORD, WORD)
                    ARG, a   , a   , a   , a   , a,  , a   )
                    ARG,       a   , a   , ........
                    ARG,             a   , a   , ........
                    
(ARG,a,a,a,a,a,a)

(WORD) ->(arg)
WORD( -> a(
,WORD) ->,a)
,WORD, -> ,a,
(WORD, -> (ARG,


/*
(WORD) ->(arg)
WORD( -> a(
WORD) ->a)
(WORD, -> (ARG,
WORD, -> a,
*/

autist(Misha). -> H

autist(Misha) :- a(Arg). 




